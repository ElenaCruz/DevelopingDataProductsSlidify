s <- 30
##We want the confidence interval:
error<- 2* s^2/sqrt(n)
xm + c(-1,1)*qt(0.975,8)*s/sqrt(n)
npill <- nplacebo <- 9
mpill <- -3
spill <- 1.5
mplacebo <- 1
splacebo <- 1.8
sp <- sqrt((((npill-1)*spill^2)+((nplacebo-1)*splacebo^2))/(npill+nplacebo-2))
(mpill-mplacebo) + c(-1,1)*qt(0.975,npill+nplacebo-2)*sp*sqrt((1/npill)+(1/nplacebo))
df <- (((spill^2)/npill)+((spill^2)/nplacebo))^2/(((spill^2/npill)^2/(npill-1))+((splacebo^2/nplacebo)^2/(nplacebo-1)))
qt(0.975,npill+nplacebo-2)
?pt
se <- sqrt((1.5^2*8+1.8^2*8)/16 * (1/9 +1/9))
z <- (-3+1) / se
pvalue <- pnorm(z) * 2
pvalue
mean.diff = -3-1
df = (9 + 9 - 2)
m_tr = -3
m_pb = 1
s_tr = 1.5
s_pb = 1.8
pooled.var = (s_tr^2 * 9 + s_pb^2 * 9)/df
se.diff = sqrt(pooled.var/9 + pooled.var/9)
t.obt = mean.diff / se.diff
t.obt
2 * pt(ts, n1 + n2 - 2)
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
s <- sqrt(((n1 - 1) * s1^2 + (n2 - 1) * s2^2)/(n1 + n2 - 2))
ts <- (x1 - x2)/(s * sqrt(1/n1 + 1/n2))
2 * pt(ts, n1 + n2 - 2)
s
?shuttle
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
##Knot at 0
knots <- x
splineTerms <- sapply(knots, function(knot)(x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
yHat <- predict(lm(y ~xMat - 1))
plot(x,y, frame=FALSE, pch=21, bg="lightblue",cex=2)
lines(x,yhat,col="red",lwd=2)
lines(x,yHat,col="red",lwd=2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
##Knot at 0
knots <- x
splineTerms <- sapply(knots, function(knot)(x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
yHat <- predict(lm(y ~xMat - 1))
plot(x,y, frame=FALSE, pch=21, bg="lightblue",cex=2)
lines(x,yHat,col="red",lwd=2)
splineTerms
yHat
xMat
x
m <- y[7]-y[6]
m
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
##Knot at 0
knots <- c(-5,0,5)
splineTerms <- sapply(knots, function(knot)(x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
yHat <- predict(lm(y ~xMat - 1))
plot(x,y, frame=FALSE, pch=21, bg="lightblue",cex=2)
lines(x,yHat,col="red",lwd=2)
splineTerms
yHat
xMat
x
m <- y[7]-y[6]
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
##Knot at 0
knots <- c(-5,0,5)
splineTerms <- sapply(knots, function(knot)(x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
yHat <- predict(lm(y ~xMat - 1))
plot(x,y, frame=FALSE, pch=21, bg="lightblue",cex=2)
lines(x,yHat,col="red",lwd=2)
yHat[7]-yHat[6]
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
summary(logRegAuto)
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(confint(logRegAuto))
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind + shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(confint(logRegAuto))
exp(logRegAuto$coeff)[1]
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
exp(confint(logRegAuto))
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind*shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
exp(confint(logRegAuto))
?InsectSprays
data(InsectSprays)
glm <- glm(InsectSprays$count~factor(InsectSprays$factor), family="poisson")
summary(glm)
data(InsectSprays)
glm <- glm(InsectSprays$count~factor(InsectSprays$spray), family="poisson")
summary(glm)
data(InsectSprays)
glm <- glm(InsectSprays$count~factor(InsectSprays$spray), family="poisson",offset=log(InsectSprays$count+1))
summary(glm)
data(InsectSprays)
glm <- glm(InsectSprays$count~factor(InsectSprays$spray), family="poisson")
summary(glm)
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind*shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
exp(confint(logRegAuto))
1/0.684
exp(logRegAuto$coeff)[2]/exp(logRegAuto$coeff)[1] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind+shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[2]/exp(logRegAuto$coeff)[1] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
exp(confint(logRegAuto))
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind+shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[1] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind+shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind+shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[2]/exp(logRegAuto$coeff)[1] ## odd_ratio_for_wind_head/odd_ratio_wind_tail
##Q2
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind+shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
##Q1 --> Binomial
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind+shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind*shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[2]/exp(logRegAuto$coeff)[1]
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind*shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~factor(shuttle$wind)-1, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~factor(shuttle$wind)-1, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~factor(shuttle$wind), family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~1.factor(shuttle$wind), family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~factor(shuttle$wind)-1, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
##Q1 --> Binomial
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~factor(as.numeric(shuttle$use=='auto'))-1, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(use ~factor(wind)-1, family="binomial",data=shuttle)
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
##Q1 --> Binomial
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(use ~wind-1, family="binomial",data=shuttle)
summary(logRegAuto)
##Q1 --> Binomial
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(use ~wind-, family="binomial",data=shuttle)
summary(logRegAuto)
##Q1 --> Binomial
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
##Q1 --> Binomial
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~factor(shuttle$wind), family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
##logRegAuto <-glm(shuttle$use ~shuttle$wind, family="binomial")
logRegAuto <-glm(shuttle$use ~factor(shuttle$wind), family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[2]/exp(logRegAuto$coeff)[1]
logRegAuto <-glm(shuttle$use ~factor(shuttle$wind)-1, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
?samples
?sample
?rand
?runif
x <- runif(10, 0, 1)
x
?sample
x <- sample(c(0,1),100,replace=TRUE)
x
t <- log(0:100)
t
ppois
?ppois
count <- rpois(100, 4)
x <- sample(c(0,1),100,replace=TRUE)
t <- log(1:101)
glm1<- glm(count ~ x + offset(t), family = poisson)
glm2 <-glm(count ~ x + offset(10t), family = poisson)
summary(glm1)
summary(glm2)
count <- rpois(100, 4)
x <- sample(c(0,1),100,replace=TRUE)
t <- (1:101)
glm1<- glm(count ~ x, family = "poisson",offset=log(t))
glm2 <-glm(count ~ x, family = "poisson",ofset=log(10)+log(t))
summary(glm1)
summary(glm2)
glm1<- glm(count ~ x, family = "poisson",offset=log(t))
length(t)
count <- rpois(100, 4)
x <- sample(c(0,1),100,replace=TRUE)
t <- (1:100)
glm1<- glm(count ~ x, family = "poisson",offset=log(t))
count <- rpois(100, 4)
x <- sample(c(0,1),100,replace=TRUE)
t <- (1:100)
glm1<- glm(count ~ x, family = "poisson",offset=log(t))
glm2 <-glm(count ~ x, family = "poisson",ofset=log(10)+log(t))
summary(glm1)
summary(glm2)
count <- rpois(100, 4)
x <- sample(c(0,1),100,replace=TRUE)
t <- (1:100)
glm1<- glm(count ~ x, family = "poisson",offset=log(t))
glm2 <-glm(count ~ x, family = "poisson",ofset=log(10)+log(t))
summary(glm1)
summary(glm2)
count <- rpois(100, 4)
x <- sample(c(0,1),100,replace=TRUE)
t <- (1:100)
glm1<- glm(count ~ x, family = "poisson",offset=log(t))
glm2 <-glm(count ~ x, family = "poisson",offset=log(10)+log(t))
summary(glm1)
summary(glm2)
##Q4
data(InsectSprays)
glm <- glm(InsectSprays$count~factor(InsectSprays$spray)-1, family="poisson")
summary(glm)
exp(glm$coeff)
library(MASS)
data(shuttle)
logRegAuto <-glm(shuttle$use ~shuttle$wind*shuttle$magn, family="binomial")
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
data(InsectSprays)
glm <- glm(InsectSprays$count~factor(InsectSprays$spray)-1, family="poisson")
summary(glm)
exp(glm$coeff)
exp(glm$coeff)[1]/exp(glm$coeff)[2]
?shuttle
head(shuttle)
library(MASS)
data(shuttle)
shuttle_mod <- shuttle ##To adapt the values
shuttle_mod$use <- as.numeric(shuttle$use == "auto")
shuttle_mod"use"
shuttle_mod$use
logRegAuto <-glm(use ~factor(wind)-1, family="binomial", data=shuttle_mod)
summary(logRegAuto)
logRegAuto <-glm(use ~factor(wind)-1, family="binomial", data=shuttle_mod)
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
shuttle_mod <- shuttle ##To adapt the values
shuttle_mod$use <- as.numeric(shuttle$use == "auto")
logRegAuto <-glm(use ~(factor(wind)-1) + magn, family="binomial", data=shuttle_mod)
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
library(MASS)
data(shuttle)
shuttle_mod <- shuttle ##To adapt the values
shuttle_mod$use <- as.numeric(shuttle$use == "auto")
logRegAuto <-glm(use ~(factor(wind)-1) * magn, family="binomial", data=shuttle_mod)
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
##Knot at 0
knots <- c(-5,0,5)
splineTerms <- sapply(knots, function(knot)(x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
yHat <- predict(lm(y ~xMat - 1))
plot(x,y, frame=FALSE, pch=21, bg="lightblue",cex=2)
lines(x,yHat,col="red",lwd=2)
yHat[7]-yHat[6]
library(MASS)
data(shuttle)
shuttle_mod <- shuttle ##To adapt the values
shuttle_mod$use <- as.numeric(shuttle$use == "auto")
logRegAuto <-glm(1-use ~factor(wind)-1, family="binomial", data=shuttle_mod)
summary(logRegAuto)
exp(logRegAuto$coeff)
exp(logRegAuto$coeff)[1]/exp(logRegAuto$coeff)[2]
setwd("~/Development/datasciencecoursera/DevelopingDataProducts")
install.packages("devtools")
library(devtools)
install_github(('slidify','ramnathv'))
install_github('slidify','ramnathv')
install_github('ramnathv/slidifyLibraries')
library(slidify)
setwd("../SlidifyProject/")
setwd("../SlidifyProject/")
author("DevelopingDataProductsSlidify")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
publish_github("ElenaCuz",https://github.com/ElenaCruz/DevelopingDataProducts)
publish_github("ElenaCuz","DevelopingDataProducts")
publish_github("ElenaCuz","DevelopingDataProductsSlidify")
publish_github("ElenaCruz","DevelopingDataProductsSlidify")
ls
getwd()
?publish_github
publish_github("ElenaCruz","DevelopingDataProductsSlidify")
getwd()
setwd("/Users/Leni/Development/datasciencecoursera/SlidifyProject/")
getwd()
publish_github("ElenaCruz","DevelopingDataProductsSlidify")
slidify("index.Rmd")
setwd("~/Development/datasciencecoursera/SlidifyProject/DevelopingDataProductsSlidify")
slidify("index.Rmd")
browseURL("index.html")
